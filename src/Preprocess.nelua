##[=====[

require "lfs"
local currDir = lfs.currentdir();
currDir = currDir.."/src"

function magiclines(s)
    if s:sub(-1)~="\n" then s=s.."\n" end
    return s:gmatch("(.-)\n")
end

local function RecurseGetAllFiles(path, tableOut)
    for dir in lfs.dir(path) do
        
        if dir:find(".nelua") then
            if dir ~= "Preprocess.nelua" and dir ~= "ECS.nelua" then
                table.insert(tableOut, path.."/"..dir)
            end
        elseif dir ~= "." and dir ~= ".." then
            RecurseGetAllFiles(path.."/"..dir, tableOut)
        end
        
    end
end

local allFiles = {}
RecurseGetAllFiles(currDir, allFiles)


--------------------------------------------------------------------------------------


local funnieFile = io.open("src/ThisIsAnnoying.nelua","w")
funnieFile:write("##[[\n")

for _,path in ipairs(allFiles) do
    local file = io.open(path, "r")
    local content = file:read("*all")
    file:close()
    
    
    local commenting = 0
    
    for line in magiclines(content) do
        
        if commenting == 0 then
            
            local match = string.match(line, '##AddComponents%((.-)%)')
            if match ~= nil then
                funnieFile:write("Add("..match..")\n")
            end
            match = string.match(line, '##RemoveComponents%((.-)%)')
            if match ~= nil then
                funnieFile:write("Remove("..match..")\n")
            end
            match = string.match(line, '##Query%((.-)%)')
            if match ~= nil then
                funnieFile:write("Queryy("..match..")\n")
            end
            
        end
        
    end
end

funnieFile:write("]]")
funnieFile:close()


]=====]
